# Diun - Docker image update notifier
# Configure Discord webhook in .env
services:
  diun:
    image: crazymax/diun:${DIUN_TAG:-4.25.0}
    container_name: diun
    hostname: diun
    restart: always
    env_file:
    # Notification and watcher settings
      - .env
    environment:
      DIUN_WATCH_WORKERS: 15
      DIUN_WATCH_SCHEDULE: "0 */6 * * *"
      DIUN_WATCH_JITTER: 30s
      DIUN_WATCH_FIRSTCHECKNOTIF: false
      DIUN_WATCH_RUNONSTARTUP: true
      DIUN_WATCH_COMPAREDIGEST: true

      DIUN_DEFAULTS_WATCHREPO: false
      DIUN_DEFAULTS_MAXTAGS: 10
      DIUN_DEFAULTS_SORTTAGS: reverse
      DIUN_DEFAULTS_NOTIFYON: new,update

      DIUN_NOTIF_DISCORD_WEBHOOKURL: ${DIUN_NOTIF_DISCORD_WEBHOOKURL}
      DIUN_NOTIF_DISCORD_RENDERFIELDS: true
      DIUN_NOTIF_DISCORD_TIMEOUT: 10s
      DIUN_NOTIF_DISCORD_TEMPLATEBODY: Docker tag {{ if .Entry.Image.HubLink }}**{{ .Entry.Image }}**({{ .Entry.Image.HubLink }}){{ else }}**{{ .Entry.Image }}**{{ end }} which you subscribed to through {{ .Entry.Provider }} provider {{ if (eq .Entry.Status "new") }}is available{{ else }}has been updated{{ end }} on {{ .Entry.Image.Domain }} registry (triggered by {{ .Meta.Hostname }} host).

      DIUN_PROVIDERS_DOCKER: true
      DIUN_PROVIDERS_DOCKER_ENDPOINT: unix:///var/run/docker.sock
      DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT: false
      DIUN_PROVIDERS_DOCKER_WATCHSTOPPED: false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - diun_data:/data
    networks:
      - infraestructura_app-network
    labels:
      diun.enable: true

volumes:
  diun_data:
    external: true

networks:
  infraestructura_app-network:
    external: true
